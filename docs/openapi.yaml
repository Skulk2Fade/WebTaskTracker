openapi: 3.0.0
info:
  title: Web Task Tracker API
  version: 1.0.0
  description: |
    This OpenAPI specification documents the main REST endpoints exposed by the
    Web Task Tracker application. It is not an exhaustive schema of every field
    but provides a quick reference to the most commonly used operations.
servers:
  - url: http://localhost:3000
paths:
  /api/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  description: Optional role when created by an admin
              required:
                - username
                - password
      responses:
        '200':
          description: User registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/login:
    post:
      summary: Log in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                token:
                  type: string
                  description: Optional 2FA token if enabled
              required:
                - username
                - password
      responses:
        '200':
          description: Logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/tasks:
    get:
      summary: List tasks for the current user
      responses:
        '200':
          description: Array of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /api/tasks/{id}:
    get:
      summary: Get a single task with subtasks, dependencies and comments
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    put:
      summary: Update a task
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    delete:
      summary: Delete a task
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task deleted

  /api/tasks/{id}/time:
    post:
      summary: Log time on a task
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                minutes:
                  type: integer
      responses:
        '201':
          description: Time entry created
    get:
      summary: List time entries for a task
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: query
          name: userId
          schema:
            type: integer
      responses:
        '200':
          description: List of time entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntry'
  /api/tasks/gantt:
    get:
      summary: Gantt chart data
      responses:
        '200':
          description: Array of Gantt tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GanttTask'
  /api/reports:
    get:
      summary: User reports
      responses:
        '200':
          description: Report data
          content:
            application/json:
              schema:
                type: object
                properties:
                  completedPerWeek:
                    type: array
                    items:
                      type: object
                      properties:
                        week:
                          type: string
                        count:
                          type: integer
                  timePerGroup:
                    type: array
                    items:
                      type: object
                      properties:
                        group:
                          type: string
                        minutes:
                          type: integer
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        role:
          type: string
          enum:
            - admin
            - group_admin
            - member
            - observer
    Task:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        dueDate:
          type: string
          format: date
        dueTime:
          type: string
          format: time
        category:
          type: string
        priority:
          type: string
        done:
          type: boolean
    TaskInput:
      type: object
      properties:
        text:
          type: string
        dueDate:
          type: string
          format: date
        dueTime:
          type: string
          format: time
        category:
          type: string
        priority:
          type: string
        done:
          type: boolean
    TimeEntry:
      type: object
      properties:
        id:
          type: integer
        taskId:
          type: integer
        userId:
          type: integer
        minutes:
          type: integer
        createdAt:
          type: string
          format: date-time
    GanttTask:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        startDate:
          type: string
          format: date
        dueDate:
          type: string
          format: date
        dependencies:
          type: array
          items:
            type: integer
